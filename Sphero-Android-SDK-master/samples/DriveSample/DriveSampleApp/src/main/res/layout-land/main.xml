<?xml version="1.0" encoding="utf-8"?>
<!-- Note that the xlmns:app tag is for connecting the puck attirbutes to the joystick view -->
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/entire_view"
    android:orientation="horizontal"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:background="@drawable/fallout"
    >
    <LinearLayout
        android:id="@+id/topMenu"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content">
        <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_weight="0.94"

        android:text="HP     90/100"
            android:paddingRight="5dp"
            android:background="@drawable/border"
            android:textColor="#1AFF80"
            android:gravity="right"
            android:textAppearance="?android:attr/textAppearanceLarge"/>
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:paddingRight="5dp"
            android:background="@drawable/border"
            android:text="AP     7/10"
            android:textColor="#1AFF80"
            android:gravity="right"
            android:textAppearance="?android:attr/textAppearanceLarge"/>
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="XP     247/1000"

            android:paddingRight="5dp"
            android:background="@drawable/border"
            android:textColor="#1AFF80"
            android:gravity="right"
            android:textAppearance="?android:attr/textAppearanceLarge"/>
    </LinearLayout>

    <LinearLayout

        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:gravity="center">

        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Diconnect"
            android:onClick="stopOllie"
            android:textColor="#1AFF80"
            android:background="#00ffffff"
            android:textAppearance="?android:attr/textAppearanceLarge" />

    </LinearLayout>

    <LinearLayout
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:gravity="center_vertical"

        android:layout_centerVertical="true"
        >
    <!-- The joystick view for the application -->
    <com.orbotix.joystick.api.JoystickView
        android:id="@+id/joystickView"
        android:visibility="visible"
        android:layout_width="250dp"
        android:layout_height="250dp"
        android:layout_marginLeft="150dp"
        app:puck_radius="60dp"
        app:edge_overlap="10dp"
        app:alpha="0.6"
        android:clickable="false"
        android:focusableInTouchMode="false"
        android:focusable="false"
        />

    <com.orbotix.calibration.api.CalibrationImageButtonView
        android:id="@+id/calibrateButton"
        android:visibility="visible"
        android:layout_width="60dp"
        android:layout_height="60dp"
        android:background="#00000000"
        android:layout_weight="1"
        android:scaleType="centerInside"
        android:layout_marginBottom="10dp"
        app:widget_orientation="above"
        app:foreground_color="#FFFFFFFF"
        app:background_color="#FF1990FF"
        app:calibration_circle_radius="50dp"
        app:calibration_center_x = "30dp"
        app:calibration_center_y = "-30dp"/>

    </LinearLayout>
    <!-- This needs to be the last element in your xml page if you want two finger calibration to work
     anywhere in your application's page -->
    <com.orbotix.calibration.api.CalibrationView
        android:id="@+id/calibrationView"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        app:twoFingerEnabled="true"
        />

    <!-- In this case, we want fragments to display over the calibration view -->
    <FrameLayout
        android:id="@+id/fragment_root"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_alignParentEnd="true" />

</RelativeLayout>

